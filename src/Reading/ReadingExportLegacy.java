package Reading;

import java.awt.Desktop;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

import Chi.Config;
import Chi.Utility;
import Entity.SensorReading;

public class ReadingExportLegacy {

	private static DateTimeFormatter HTMLDateFormat = DateTimeFormatter.ofPattern("dd MMMM YYYY, HH:mm:ss a");
	
	public static void export (ArrayList<SensorReading> rows) {
		TimeSeriesCollection dataset=new TimeSeriesCollection();
		TimeSeries s1=new TimeSeries("Temperature");
		for (SensorReading r : rows) {
			s1.addOrUpdate(new Second(Utility.localDateTimeToUtilDate(r.getTimestamp())),r.getActualValue());
		}
		dataset.addSeries(s1);
		
    	JFreeChart barChart = ChartFactory.createTimeSeriesChart("Temperature", "Time", "C", dataset, true, true, false);
    	barChart.removeLegend();
    	barChart.getTitle().setFont(new Font("Segoe UI",Font.BOLD,20));
    	//barChart.getTitle().setPaint(Color.WHITE);
    	//barChart.setBackgroundImage(new ImageIcon(this.getClass().getResource("/SmallDialogTopPanel.jpg")).getImage());

        final DateAxis axis = (DateAxis) barChart.getXYPlot().getDomainAxis();
        axis.setDateFormatOverride(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss aa"));
    	
        BufferedImage img = barChart.createBufferedImage(1024,600);
        try {
        	ImageIO.write(img, "png", new File("exported.png"));
        } catch (IOException e) {}
        
		StringBuilder sb=new StringBuilder("<!DOCTYPE html>");
		sb.append("<style>"
				+ " h1    {"
				+ "			font-family: \"Georgia\", serif;"
				+ "			text-align: center;"
				+ "			color: white;"
				+ "		  }"
				+ "	table {"
				+ "		  	border-collapse: collapse;"
				+ "		  	border: 0px solid black;"
				+ "			font-family: Arial, Helvetica, sans-serif;"
				+ "			margin-left: auto;"
				+ "			margin-right: auto;"
				+ "		  }"
				
				+ "	 th,td{"
				+ "			border: 0px solid black;"
				+ "		  	padding:10px;"
				+ "		  } "
				
				+ "thead {background-color:#00ace6; color: black; font-style: bold}"
				
				+ "tbody tr:nth-child(even) {background: rgba(255, 255, 255, 0.8);}"
				+ "tbody tr:nth-child(odd) {color: white;}"
				
				+ "body { background-image:url(\"http://i.imgur.com/pfhky2y.jpg\"); background-repeat: no-repeat; background-attachment: fixed; }"
				+ "p.Foot{font-family: \"Georgia\", serif; font-style: italic; text-align: center; color: white}"
				+ "</style>"
				
				+ "<title>Exported Data</title>");
		sb.append("<body>");
		sb.append("<h1>Exported Data</h1>");
		sb.append("<center><img src=\"exported.png\"></center>");
		sb.append("<table border=\"1\"><thead><td>Time</td><td>Usage(kWh)</td>");
		sb.append("</tr></thead><tbody>");
		
		for (int i=0;i<rows.size();i++) {
			sb.append("<tr>");
			sb.append("<td>");
			sb.append(HTMLDateFormat.format(rows.get(i).getTimestamp()));
			sb.append("</td>");
			sb.append("<td>");
			sb.append(rows.get(i).getActualValue());
			sb.append("</td>");
			sb.append("</tr>");
		}
		sb.append("</tbody></table><p class=\"Foot\">Generated by ");
		sb.append(Config.APP_NAME+" at "+HTMLDateFormat.format(LocalDateTime.now())+".");
		sb.append("</p>");
		sb.append("</body>");
		sb.append("</html>");
		
		try {
			File f=new File("Exported.html");
			PrintWriter pw=new PrintWriter(new BufferedWriter(new FileWriter(f)));
			pw.println(sb.toString());
			pw.close();
			
			if (Desktop.isDesktopSupported()) {
			    Desktop.getDesktop().open(f);
			}
		} catch (IOException e) {
			JOptionPane.showMessageDialog(null, "Error writing file!", "Export", JOptionPane.ERROR_MESSAGE);
		}
	}
	
}
